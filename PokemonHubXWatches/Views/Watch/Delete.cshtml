@model PokemonHubXWatches.ViewModels.WatchViewModel

@{
    ViewData["Title"] = "Delete Watch";
}

<div class="container mt-4">
    <h1>Delete Watch</h1>
    <div class="alert alert-danger">
        <h4>Are you sure you want to delete this Watch?</h4>
    </div>

    <div class="card mb-4">
        <div class="row g-0">
            <div class="col-md-4">
                <img src="@Model.ImageUrl" class="img-fluid rounded-start" alt="@Model.Name">
            </div>
            <div class="col-md-8">
                <div class="card-body">
                    <h2 class="card-title">@Model.Name</h2>
                    <dl class="row">
                        <dt class="col-sm-4">Description</dt>
                        <dd class="col-sm-8">@Model.Description</dd>

                        <dt class="col-sm-4">Price</dt>
                        <dd class="col-sm-8">$@Model.Price.ToString("F2")</dd>

                        <dt class="col-sm-4">Status</dt>
                        <dd class="col-sm-8">
                            <span class="@(Model.IsAvailable ? "text-success" : "text-danger")">
                                @(Model.IsAvailable ? "Available" : "Not Available")
                            </span>
                        </dd>

                        <dt class="col-sm-4">Stock</dt>
                        <dd class="col-sm-8">@Model.StockQuantity</dd>

                        @if (!string.IsNullOrEmpty(Model.ThemedPokemonName))
                        {
                            <dt class="col-sm-4">Pokemon Theme</dt>
                            <dd class="col-sm-8">@Model.ThemedPokemonName</dd>
                        }
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <form asp-action="Delete">
        <input type="hidden" asp-for="WatchID" />
        <input type="submit" value="Delete" class="btn btn-danger" />
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </form>
</div>